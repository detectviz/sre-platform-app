openapi: 3.1.0
info:
  title: SRE 平台 API 契約
  version: 2.28.0
  description: |
    # 版本 2.28.0
    - **UI/UX 重大優化**: 在告警規則建立精靈中，將「選擇監控目標類型」與「選擇範本」兩個動作，整合成一個單一、直觀的整合式範本市集介面，大幅簡化了規則建立的初始流程。

    # 版本 2.27.0
    - **UI/UX 優化**: 在告警規則建立精靈中，將範本選擇從卡片網格改為可搜尋的下拉式選單，以提升在大量範本中的選擇效率。

    # 版本 2.25.0
    - **新增**: 在 `POST /incidents/{incident_id}/actions` 端點中增加了 `add_note` 和 `delete_note` 操作，以支援在事件時間軸上新增和刪除備註的功能。

    # 版本 2.17.0
    - **重大重構**: 為平台所有主要模組新增了 `/.../options` API 端點，將所有 UI 相關的硬編碼資料 (如篩選條件、狀態顏色、標籤等) 全部遷移至由 API 動態提供。此舉實現了前端 UI 與業務邏輯的完全解耦，大幅提升了系統的可維護性與擴展性。

    # 版本 2.7.0
    - **新增**: 建立了 GitHub Actions 工作流程，用於在每次推送到 `main` 分支時自動將專案部署到 GitHub Pages，實現 CI/CD。

    # 版本 2.6.0
    - **新增**: 為主要列表頁面 (告警規則、靜音規則、通知策略等) 增加了後端篩選與搜尋功能。
    - **新增**: 完成了告警規則測試、規則範本、通知管道測試、自動化重試等核心功能的 API 端點。
    - **新增**: 為 CSV 匯入功能增加了對應的 API 端點。

    本文件定義 SRE 平台前後端之間的資料契約，作為後端開發的唯一真實來源 (SSOT)。
servers:
  - url: http://localhost:4000/api/v1
    description: 本地 Mock 伺服器
tags:
  - name: 認證與個人設定
    description: 登入、個人資訊與偏好設定。
  - name: AI Copilot
    description: 整合平台所有 AI 驅動的功能。
  - name: 儀表板
    description: 儀表板的 CRUD 與戰情室設定。
  - name: 事故管理 (Incidents)
    description: 事故列表、詳情、狀態變更。
  - name: 告警規則 (Grafana 代理)
    description: 告警偵測規則設定 (代理 Grafana API)。
  - name: 靜音規則
    description: 平台增值的週期性事件靜音規則。
  - name: 資源管理
    description: 資源、資源群組與拓撲視圖。
  - name: 自動化
    description: 自動化腳本、觸發器與執行歷史。
  - name: 分析中心
    description: 日誌、追蹤與容量規劃。
  - name: 身份與存取 (IAM)
    description: 人員、團隊、角色與審計日誌。
  - name: 通知
    description: 通知策略、管道與歷史。
  - name: 平台
    description: 標籤、版面與系統級配置。
  - name: 全局功能
    description: 全局搜尋與系統健康檢查。
paths:
  # ===========================================================================
  # AUTH & PROFILE
  # ===========================================================================
  /me:
    get:
      tags:
        - 認證與個人設定
      summary: 取得目前登入者的個人資訊
      operationId: getCurrentUser
      responses:
        "200":
          description: 回傳使用者基本資料與角色。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "401":
          $ref: "#/components/responses/Unauthorized"
  
  /me/login-history:
    get:
      tags:
        - 認證與個人設定
      summary: 取得登入歷史紀錄
      operationId: getLoginHistory
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
      responses:
        "200":
          description: 回傳登入歷史分頁列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/LoginHistoryRecord"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /me/preferences:
    get:
      tags:
        - 認證與個人設定
      summary: 取得使用者偏好設定
      operationId: getPreferences
      responses:
        "200":
          description: 回傳偏好設定資料。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPreferences"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      tags:
        - 認證與個人設定
      summary: 更新使用者偏好設定
      operationId: updatePreferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPreferences"
      responses:
        "200":
          description: 偏好設定已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPreferences"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /me/change-password:
    post:
      tags:
        - 認證與個人設定
      summary: 變更目前登入者的密碼
      operationId: changePassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [oldPassword, newPassword]
              properties:
                oldPassword:
                  type: string
                  format: password
                newPassword:
                  type: string
                  format: password
      responses:
        "204":
          description: 密碼已成功更新。
        "400":
          description: "請求無效（例如，舊密碼不正確）。"
        "401":
          $ref: "#/components/responses/Unauthorized"
  
  # ===========================================================================
  # AI COPILOT
  # ===========================================================================
  /ai/briefing:
    get:
      tags: [AI Copilot]
      summary: 取得 SRE 戰情室 AI 每日簡報
      operationId: getAIBriefing
      responses:
        "200":
          description: 回傳最新的 AI 簡報內容。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefingData'
  
  /ai/briefing/generate:
    post:
      tags: [AI Copilot]
      summary: 觸發生成新的 SRE 戰情室 AI 每日簡報
      operationId: generateAIBriefing
      responses:
        "200":
          description: 回傳新生成的 AI 簡報內容。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefingData'
  
  # ... (other endpoints)
  
  # ===========================================================================
  # ALERT RULES
  # ===========================================================================
  /alert-rules/metrics:
    get:
      tags:
        - 告警規則 (Grafana 代理)
      summary: 取得所有可用的指標元數據
      operationId: getAlertRuleMetrics
      responses:
        "200":
          description: 成功回傳指標元數據列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricMetadata'

# ... (other components)

components:
  schemas:
    # ... (other schemas)
    MetricMetadata:
      type: object
      properties:
        id:
          type: string
          description: 指標的唯一識別碼 (e.g., 'cpu_usage_percent')。
        name:
          type: string
          description: 指標的顯示名稱 (e.g., 'CPU Usage')。
        unit:
          type: string
          nullable: true
          description: 指標的單位 (e.g., '%', 'ms', null)。
    # ... (rest of the file)
---
## ... (Rest of the file) ...
      responses:
        "200":
          description: 回傳最新的 AI 簡報內容。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefingData'
  
  /ai/briefing/generate:
    post:
      tags: [AI Copilot]
      summary: 觸發生成新的 SRE 戰情室 AI 每日簡報
      operationId: generateAIBriefing
      responses:
        "200":
          description: 回傳新生成的 AI 簡報內容。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefingData'
  
  # ... (rest of the yaml) ...
  /alert-rules/resource-types:
    get:
      tags:
        - 告警規則 (Grafana 代理)
      summary: 取得所有可用於告警的資源類型
      operationId: getAlertRuleResourceTypes
      responses:
        "200":
          description: 成功回傳資源類型列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceType'
  /alert-rules/metrics:
    get:
      tags:
        - 告警規則 (Grafana 代理)
      summary: 取得所有可用的指標元數據
      operationId: getAlertRuleMetrics
      responses:
        "200":
          description: 成功回傳指標元數據列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricMetadata'
  /alert-rules/{rule_id}/test:
    post:
      tags: [告警規則 (Grafana 代理)]
      summary: 測試一條告警規則
      operationId: testAlertRule
  # ... (rest of the yaml) ...
  /automation/triggers:
    get:
      tags: [自動化]
      summary: 取得觸發器分頁列表
      operationId: getTriggers
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/KeywordParam"
      responses:
        "200":
          description: 成功回傳觸發器分頁列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/AutomationTrigger"
    post:
      tags: [自動化]
      summary: 建立新的觸發器
      operationId: createTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationTrigger'
      responses:
        "201":
          description: 成功建立觸發器。
  /automation/triggers/{trigger_id}:
    patch:
      tags: [自動化]
      summary: 更新觸發器
      operationId: updateTrigger
      parameters:
        - name: trigger_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationTrigger'
      responses:
        "200":
          description: 成功回傳更新後的觸發器。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationTrigger'
    delete:
      tags: [自動化]
      summary: 刪除觸發器
      operationId: deleteTrigger
      parameters:
        - name: trigger_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: 觸發器已成功刪除。

  /settings/tags:
    get:
      tags: [平台]
      summary: 取得標籤登錄處清單
      operationId: listTagDefinitions
      responses:
        "200":
          description: 成功回傳所有已註冊的標籤鍵。系統保留鍵與自訂鍵會一併列出。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagDefinition'
    post:
      tags: [平台]
      summary: 新增標籤鍵
      operationId: createTagDefinition
      description: |
        建立新的標籤鍵並定義其治理屬性。鍵名須符合 `^[a-z0-9_]{1,32}$` 規則，並至少綁定一個使用範圍。
        系統會自動將 `usageCount` 初始化為 0，並依據資料型別處理允許值。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagDefinitionCreateRequest'
      responses:
        "201":
          description: 標籤鍵建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDefinition'
        "400":
          $ref: "#/components/responses/BadRequest"

  /settings/tags/{tag_id}:
    patch:
      tags: [平台]
      summary: 更新標籤鍵治理屬性
      operationId: updateTagDefinition
      parameters:
        - name: tag_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagDefinitionUpdateRequest'
      responses:
        "200":
          description: 成功回傳更新後的標籤定義。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDefinition'
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags: [平台]
      summary: 刪除標籤鍵
      operationId: deleteTagDefinition
      parameters:
        - name: tag_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: 標籤鍵已刪除。若為系統保留鍵將回傳 400 並拒絕操作。
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"

  /settings/tags/{tag_id}/values:
    put:
      tags: [平台]
      summary: 管理枚舉型標籤允許值
      operationId: replaceTagValues
      description: 僅適用於資料型別為 `enum` 的標籤。此操作會覆寫既有允許值並重置其使用次數統計。
      parameters:
        - name: tag_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: 新的允許值清單。
              items:
                $ref: '#/components/schemas/TagValue'
      responses:
        "200":
          description: 成功回傳更新後的標籤定義。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDefinition'
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
  /automation/triggers/batch-actions:
    post:
      tags: [自動化]
      summary: 批次操作觸發器
      operationId: batchUpdateTriggers
      requestBody:
        $ref: "#/components/requestBodies/BatchAction"
      responses:
        "200":
          $ref: "#/components/responses/Success"
components:
  schemas:
    # ... (other schemas) ...
    AlertRule:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        # ... (other properties) ...
    IncidentHistoryEvent:
      type: object
      description: 代表事故時間軸上的一則事件紀錄。
      required: [timestamp, user, action]
      properties:
        timestamp:
          type: string
          format: date-time
          description: 發生事件的時間 (格式：YYYY-MM-DD HH:mm:ss)。
        user:
          type: string
          description: 觸發此次紀錄的使用者名稱。
        action:
          type: string
          description: 動作名稱，例如 `Created`、`Acknowledged`。
        details:
          type: string
          description: 額外說明或備註。
          nullable: true
    Incident:
      type: object
      description: 平台中的事件資料結構，已改為僅保留狀態、嚴重性與影響三層標籤。
      required: [id, summary, resource, resourceId, impact, rule, ruleId, status, severity, triggeredAt, history]
      properties:
        id:
          type: string
          description: 事件唯一識別碼 (例如 `INC-001`)。
        summary:
          type: string
          description: 事件的摘要說明。
        resource:
          type: string
          description: 受影響資源的顯示名稱。
        resourceId:
          type: string
          description: 受影響資源的唯一 ID。
        impact:
          type: string
          description: 事件對服務造成的影響層級。
          enum: [High, Medium, Low]
        rule:
          type: string
          description: 觸發本事件的告警規則名稱。
        ruleId:
          type: string
          description: 觸發本事件的告警規則 ID。
        status:
          type: string
          description: 事件目前狀態。
          enum: [new, acknowledged, resolved, silenced]
        severity:
          type: string
          description: 事件的嚴重性分類。
          enum: [critical, warning, info]
        assignee:
          type: string
          nullable: true
          description: 目前負責處理事件的人員名稱。
        triggeredAt:
          type: string
          format: date-time
          description: 事件觸發時間 (格式：YYYY-MM-DD HH:mm:ss)。
        history:
          type: array
          description: 事件時間軸紀錄。
          items:
            $ref: '#/components/schemas/IncidentHistoryEvent'
        aiAnalysis:
          description: AI 自動產出的分析內容。
          nullable: true
          allOf:
            - $ref: '#/components/schemas/IncidentAnalysis'

    TagValue:
      type: object
      description: 代表枚舉型標籤的允許值。
      required: [id, value, usageCount]
      properties:
        id:
          type: string
          description: 允許值的唯一識別碼。
        value:
          type: string
          maxLength: 128
          description: 實際可指派的值內容。
        description:
          type: string
          nullable: true
          description: 額外註記或說明。
        usageCount:
          type: integer
          minimum: 0
          description: 此值目前被引用的次數統計。

    TagDefinition:
      type: object
      description: 標籤登錄處中對單一標籤鍵的完整定義。
      required: [id, key, scopes, kind, required, uniqueWithinScope, writableRoles, piiLevel, system, usageCount, allowedValues]
      properties:
        id:
          type: string
          description: 標籤鍵的唯一識別碼。
        key:
          type: string
          pattern: '^[a-z0-9_]{1,32}$'
          description: 標籤鍵名稱，使用小寫英數字與底線。
        description:
          type: string
          nullable: true
          description: 用於向使用者說明此標籤的用途與治理規則。
        scopes:
          type: array
          minItems: 1
          description: 標籤可被套用的模組範圍。
          items:
            type: string
            enum: [resource, datasource, discovery_job, exporter, dashboard, alert_rule, incident, notification_policy, automation, analysis, tenant, team, user]
        kind:
          type: string
          enum: [enum, string, number, boolean]
          description: 標籤值的資料型別。
        enumValues:
          type: array
          nullable: true
          description: 若型別為枚舉 (enum) 時，定義允許的原始值。
          items:
            type: string
            maxLength: 128
        allowedValues:
          type: array
          description: 目前在平台中所維護的允許值資料。
          items:
            $ref: '#/components/schemas/TagValue'
        required:
          type: boolean
          description: 指定此標籤在對應範圍內是否為必填。
        uniqueWithinScope:
          type: boolean
          description: 同一個範圍內是否僅允許唯一值 (常用於 tenant、tags.schema_version 等鍵)。
        writableRoles:
          type: array
          minItems: 1
          description: 允許修改此標籤的角色代碼清單。
          items:
            type: string
        piiLevel:
          type: string
          enum: [none, low, high]
          description: 此標籤值是否可能含有個資，決定審計與保護策略。
        system:
          type: boolean
          description: 是否為系統保留鍵。保留鍵不可更改鍵名、範圍或資料型別。
        usageCount:
          type: integer
          minimum: 0
          description: 此標籤鍵在平台中被使用的次數統計。

    TagDefinitionCreateRequest:
      type: object
      description: 用於新增標籤鍵的請求結構。
      required: [key, scopes, kind, writableRoles]
      properties:
        key:
          type: string
          pattern: '^[a-z0-9_]{1,32}$'
        description:
          type: string
          nullable: true
        scopes:
          type: array
          minItems: 1
          items:
            type: string
            enum: [resource, datasource, discovery_job, exporter, dashboard, alert_rule, incident, notification_policy, automation, analysis, tenant, team, user]
        kind:
          type: string
          enum: [enum, string, number, boolean]
        enumValues:
          type: array
          nullable: true
          items:
            type: string
            maxLength: 128
        writableRoles:
          type: array
          minItems: 1
          items:
            type: string
        piiLevel:
          type: string
          enum: [none, low, high]
          default: none
        required:
          type: boolean
          default: false
        uniqueWithinScope:
          type: boolean
          default: false
        system:
          type: boolean
          default: false

    TagDefinitionUpdateRequest:
      type: object
      description: 用於更新標籤鍵的請求結構。未提供的欄位保持原值。
      properties:
        description:
          type: string
          nullable: true
        scopes:
          type: array
          items:
            type: string
            enum: [resource, datasource, discovery_job, exporter, dashboard, alert_rule, incident, notification_policy, automation, analysis, tenant, team, user]
        kind:
          type: string
          enum: [enum, string, number, boolean]
        enumValues:
          type: array
          nullable: true
          items:
            type: string
            maxLength: 128
        writableRoles:
          type: array
          items:
            type: string
        piiLevel:
          type: string
          enum: [none, low, high]
        required:
          type: boolean
        uniqueWithinScope:
          type: boolean
        system:
          type: boolean
    IncidentCreateRequest:
      type: object
      description: 建立新事件時所需的資料結構。
      required: [summary, resourceId, ruleId, severity, impact]
      properties:
        summary:
          type: string
          description: 事件摘要。
        resourceId:
          type: string
          description: 受影響資源的唯一 ID。
        ruleId:
          type: string
          description: 觸發事件的告警規則 ID。
        severity:
          type: string
          enum: [critical, warning, info]
          description: 事件嚴重性。
        impact:
          type: string
          enum: [High, Medium, Low]
          description: 事件的影響層級。
        assignee:
          type: string
          nullable: true
          description: 指定的事件處理人員。
    MetricMetadata:
      type: object
      properties:
        id:
          type: string
          description: 指標的唯一識別碼 (e.g., 'cpu_usage_percent')。
        name:
          type: string
          description: 指標的顯示名稱 (e.g., 'CPU Usage')。
        unit:
          type: string
          nullable: true
          description: 指標的單位 (e.g., '%', 'ms', null)。
    ResourceType:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the resource type (e.g., 'host').
        name:
          type: string
          description: The display name for the resource type (e.g., '主機 (Host/VM)').
        icon:
          type: string
          description: The Lucide icon name for the resource type (e.g., 'server').

    # ... (rest of the file) ...
  
  # ... (rest of the file) ...
  /ai/briefing/generate:
    post:
      tags: [AI Copilot]
      summary: 觸發生成新的 SRE 戰情室 AI 每日簡報
      operationId: generateAIBriefing
      responses:
        "200":
          description: 回傳新生成的 AI 簡報內容。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefingData'
  
  # ... (rest of the yaml) ...
  /alert-rules/resource-types:
    get:
      tags:
        - 告警規則 (Grafana 代理)
      summary: 取得所有可用於告警的資源類型
      operationId: getAlertRuleResourceTypes
      responses:
        "200":
          description: 成功回傳資源類型列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceType'
  /alert-rules/metrics:
    get:
      tags:
        - 告警規則 (Grafana 代理)
      summary: 取得所有可用的指標元數據
      operationId: getAlertRuleMetrics
      responses:
        "200":
          description: 成功回傳指標元數據列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricMetadata'
  /alert-rules/{rule_id}/test:
    post:
      tags: [告警規則 (Grafana 代理)]
      summary: 測試一條告警規則
      operationId: testAlertRule
  # ... (rest of the yaml) ...
components:
  schemas:
    # ... (other schemas) ...
    AlertRule:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        # ... (other properties) ...
    MetricMetadata:
      type: object
      properties:
        id:
          type: string
          description: 指標的唯一識別碼 (e.g., 'cpu_usage_percent')。
        name:
          type: string
          description: 指標的顯示名稱 (e.g., 'CPU Usage')。
        unit:
          type: string
          nullable: true
          description: 指標的單位 (e.g., '%', 'ms', null)。
    ResourceType:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the resource type (e.g., 'host').
        name:
          type: string
          description: The display name for the resource type (e.g., '主機 (Host/VM)').
        icon:
          type: string
          description: The Lucide icon name for the resource type (e.g., 'server').

    # ... (rest of the file) ...
  
  # ... (rest of the file) ...
  /ai/briefing/generate:
    post:
      tags: [AI Copilot]
      summary: 觸發生成新的 SRE 戰情室 AI 每日簡報
      operationId: generateAIBriefing
      responses:
        "200":
          description: 回傳新生成的 AI 簡報內容。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefingData'
  
  # ... (rest of the yaml) ...
  /alert-rules/resource-types:
    get:
      tags:
        - 告警規則 (Grafana 代理)
      summary: 取得所有可用於告警的資源類型
      operationId: getAlertRuleResourceTypes
      responses:
        "200":
          description: 成功回傳資源類型列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceType'
  /alert-rules/metrics:
    get:
      tags:
        - 告警規則 (Grafana 代理)
      summary: 取得所有可用的指標元數據
      operationId: getAlertRuleMetrics
      responses:
        "200":
          description: 成功回傳指標元數據列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricMetadata'
  /alert-rules/{rule_id}/test:
    post:
      tags: [告警規則 (Grafana 代理)]
      summary: 測試一條告警規則
      operationId: testAlertRule
  # ... (rest of the yaml) ...
components:
  schemas:
    # ... (other schemas) ...
    AlertRule:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        # ... (other properties) ...
    MetricMetadata:
      type: object
      properties:
        id:
          type: string
          description: 指標的唯一識別碼 (e.g., 'cpu_usage_percent')。
        name:
          type: string
          description: 指標的顯示名稱 (e.g., 'CPU Usage')。
        unit:
          type: string
          nullable: true
          description: 指標的單位 (e.g., '%', 'ms', null)。
    ResourceType:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the resource type (e.g., 'host').
        name:
          type: string
          description: The display name for the resource type (e.g., '主機 (Host/VM)').
        icon:
          type: string
          description: The Lucide icon name for the resource type (e.g., 'server').

    # ... (rest of the file) ...
  
  # ... (rest of the file) ...
  /ai/briefing/generate:
    post:
      tags: [AI Copilot]
      summary: 觸發生成新的 SRE 戰情室 AI 每日簡報
      operationId: generateAIBriefing
      responses:
        "200":
          description: 回傳新生成的 AI 簡報內容。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefingData'
  
  # ... (rest of the yaml) ...
  /alert-rules/resource-types:
    get:
      tags:
        - 告警規則 (Grafana 代理)
      summary: 取得所有可用於告警的資源類型
      operationId: getAlertRuleResourceTypes
      responses:
        "200":
          description: 成功回傳資源類型列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceType'
  /alert-rules/metrics:
    get:
      tags:
        - 告警規則 (Grafana 代理)
      summary: 取得所有可用的指標元數據
      operationId: getAlertRuleMetrics
      responses:
        "200":
          description: 成功回傳指標元數據列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricMetadata'
  /alert-rules/{rule_id}/test:
    post:
      tags: [告警規則 (Grafana 代理)]
      summary: 測試一條告警規則
      operationId: testAlertRule
  # ... (rest of the yaml) ...
components:
  schemas:
    # ... (other schemas) ...
    AlertRule:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        # ... (other properties) ...
    MetricMetadata:
      type: object
      properties:
        id:
          type: string
          description: 指標的唯一識別碼 (e.g., 'cpu_usage_percent')。
        name:
          type: string
          description: 指標的顯示名稱 (e.g., 'CPU Usage')。
        unit:
          type: string
          nullable: true
          description: 指標的單位 (e.g., '%', 'ms', null)。
    ResourceType:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the resource type (e.g., 'host').
        name:
          type: string
          description: The display name for the resource type (e.g., '主機 (Host/VM)').
        icon:
          type: string
          description: The Lucide icon name for the resource type (e.g., 'server').

    # ... (rest of the file) ...
  
  # ... (rest of the file) ...
  /iam/teams:
    get:
      tags: [身份與存取 (IAM)]
      summary: 取得團隊的分頁列表
      operationId: getTeams
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/KeywordParam"
      responses:
        "200":
          description: 成功回傳團隊分頁列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/Team"
  /iam/teams/batch-actions:
    post:
      tags: [身份與存取 (IAM)]
      summary: 批次操作團隊
      operationId: batchUpdateTeams
      requestBody:
        $ref: "#/components/requestBodies/BatchAction"
      responses:
        "200":
          $ref: "#/components/responses/Success"
  /iam/roles:
    get:
      tags: [身份與存取 (IAM)]
      summary: 取得角色的分頁列表
      operationId: getRoles
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/KeywordParam"
      responses:
        "200":
          description: 成功回傳角色分頁列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/Role"
  /iam/roles/batch-actions:
    post:
      tags: [身份與存取 (IAM)]
      summary: 批次操作角色
      operationId: batchUpdateRoles
      requestBody:
        $ref: "#/components/requestBodies/BatchAction"
      responses:
        "200":
          $ref: "#/components/responses/Success"
  # ... (rest of file)
components:
  # ... (rest of file)
  parameters:
    KeywordParam:
      name: keyword
      in: query
      description: 用於模糊搜尋的關鍵字。
      schema:
        type: string
  requestBodies:
    BatchAction:
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                type: string
                enum: [delete, enable, disable]
              ids:
                type: array
                items:
                  type: string
  responses:
    Success:
      description: 操作成功。
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
  # ... (rest of file)
