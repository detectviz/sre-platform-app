# Silence Rule API Paths
paths:
  /silence-rules:
    get:
      tags: [Silence Rules]
      summary: List silence rules
      description: Retrieve a paginated list of silence rules with optional keyword and type filters.
      operationId: listSilenceRules
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: keyword
          in: query
          description: Filter by partial match against the rule name.
          schema:
            type: string
        - name: type
          in: query
          description: Filter by silence rule type.
          schema:
            type: string
            enum: [single, repeat, condition]
        - name: enabled
          in: query
          description: Filter by enabled status. Accepts boolean string values (true/false).
          schema:
            type: boolean
      responses:
        '200':
          description: Paginated silence rule list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  page_size:
                    type: integer
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/SilenceRule'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags: [Silence Rules]
      summary: Create silence rule
      operationId: createSilenceRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SilenceRuleCreate'
      responses:
        '201':
          description: Silence rule created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SilenceRule'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /silence-rules/templates:
    get:
      tags: [Silence Rules]
      summary: List silence rule templates
      operationId: listSilenceRuleTemplates
      responses:
        '200':
          description: Available silence rule templates.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SilenceRuleTemplate'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /silence-rules/batch-actions:
    post:
      tags: [Silence Rules]
      summary: Perform batch actions on silence rules
      operationId: batchSilenceRuleActions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [action, ids]
              properties:
                action:
                  type: string
                  enum: [delete, enable, disable]
                ids:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Batch action completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /silence-rules/import:
    post:
      tags: [Silence Rules]
      summary: Import silence rules
      operationId: importSilenceRules
      responses:
        '200':
          description: Import completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 成功匯入 3 條靜音規則。
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /silence-rules/{id}:
    parameters:
      - $ref: '#/components/parameters/IdParam'
    patch:
      tags: [Silence Rules]
      summary: Update silence rule
      operationId: updateSilenceRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SilenceRuleUpdate'
      responses:
        '200':
          description: Silence rule updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SilenceRule'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags: [Silence Rules]
      summary: Delete silence rule
      operationId: deleteSilenceRule
      responses:
        '204':
          description: Silence rule deleted successfully.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
