# Automation API Paths
paths:
  /automation/scripts:
    get:
      tags: [Automation]
      summary: List automation scripts
      description: 取得自動化腳本列表，支援分頁與排序。
      operationId: listAutomationScripts
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
      responses:
        '200':
          description: 成功取得腳本列表。
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  page_size:
                    type: integer
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AutomationPlaybook'
              example:
                page: 1
                page_size: 10
                total: 2
                items:
                  - id: play-001
                    name: 重啟故障 Pod
                    type: shell
                    enabled: true
                    run_count: 12
                    last_run_status: success
                    last_run_at: '2025-09-23T14:05:10Z'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags: [Automation]
      summary: Create automation script
      description: 建立新的自動化腳本。
      operationId: createAutomationScript
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationPlaybookCreate'
            example:
              name: 重啟故障 Pod
              type: shell
              description: 自動重啟 CrashLoopBackOff 狀態的 Pod。
              content: |
                #!/bin/bash
                kubectl rollout restart deployment "$DEPLOYMENT"
              enabled: true
              parameters:
                - name: namespace
                  label: 命名空間
                  type: string
                  required: true
      responses:
        '201':
          description: 腳本建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationPlaybook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /automation/scripts/batch-actions:
    post:
      tags: [Automation]
      summary: Batch update automation scripts
      description: 針對多個腳本執行批次操作，目前支援刪除。
      operationId: batchUpdateAutomationScripts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [action, ids]
              properties:
                action:
                  type: string
                  enum: [delete]
                ids:
                  type: array
                  items:
                    type: string
                  minItems: 1
            example:
              action: delete
              ids: [play-001, play-002]
      responses:
        '200':
          description: 批次操作結果。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /automation/scripts/{id}:
    parameters:
      - $ref: '#/components/parameters/IdParam'
    patch:
      tags: [Automation]
      summary: Update automation script
      description: 更新指定腳本的資訊。
      operationId: updateAutomationScript
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationPlaybookUpdate'
            example:
              description: 更新腳本內容
              enabled: false
      responses:
        '200':
          description: 腳本更新成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationPlaybook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags: [Automation]
      summary: Soft delete automation script
      description: 將腳本標記為刪除（soft delete）。
      operationId: deleteAutomationScript
      responses:
        '200':
          description: 刪除成功，回傳空物件。
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /automation/scripts/{id}/execute:
    parameters:
      - $ref: '#/components/parameters/IdParam'
    post:
      tags: [Automation]
      summary: Execute automation script
      description: 立即執行指定腳本並回傳執行紀錄。
      operationId: executeAutomationScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationExecutionRequest'
            example:
              parameters:
                namespace: production
      responses:
        '200':
          description: 腳本已啟動執行。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /automation/executions:
    get:
      tags: [Automation]
      summary: List automation executions
      description: 取得執行紀錄列表，可依狀態或腳本 ID 過濾。
      operationId: listAutomationExecutions
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: status
          in: query
          description: 依執行狀態過濾。
          schema:
            type: string
            enum: [pending, running, success, failed, cancelled]
        - name: playbook_id
          in: query
          description: 依腳本 ID 過濾。
          schema:
            type: string
      responses:
        '200':
          description: 成功取得執行紀錄。
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  page_size:
                    type: integer
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AutomationExecution'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /automation/executions/{id}/retry:
    parameters:
      - $ref: '#/components/parameters/IdParam'
    post:
      tags: [Automation]
      summary: Retry automation execution
      description: 根據既有的執行紀錄重新執行腳本。
      operationId: retryAutomationExecution
      responses:
        '200':
          description: 已建立新的執行紀錄。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecution'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /automation/triggers:
    get:
      tags: [Automation]
      summary: List automation triggers
      description: 取得自動化觸發器列表，支援分頁與關鍵字搜尋。
      operationId: listAutomationTriggers
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: keyword
          in: query
          description: 依名稱關鍵字過濾。
          schema:
            type: string
      responses:
        '200':
          description: 成功取得觸發器列表。
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  page_size:
                    type: integer
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AutomationTrigger'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags: [Automation]
      summary: Create automation trigger
      description: 建立新的觸發器並關聯指定的腳本。
      operationId: createAutomationTrigger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationTriggerCreate'
            example:
              name: 每日日誌歸檔
              type: Schedule
              enabled: true
              target_playbook_id: play-005
              config:
                schedule:
                  cron: '0 3 * * *'
                  cron_description: 每天 03:00 執行
      responses:
        '201':
          description: 觸發器建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationTrigger'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /automation/triggers/batch-actions:
    post:
      tags: [Automation]
      summary: Batch update automation triggers
      description: 批次啟用、停用或刪除觸發器。
      operationId: batchUpdateAutomationTriggers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [action, ids]
              properties:
                action:
                  type: string
                  enum: [enable, disable, delete]
                ids:
                  type: array
                  items:
                    type: string
                  minItems: 1
            example:
              action: enable
              ids: [trig-001, trig-002]
      responses:
        '200':
          description: 批次操作結果。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /automation/triggers/{id}:
    parameters:
      - $ref: '#/components/parameters/IdParam'
    patch:
      tags: [Automation]
      summary: Update automation trigger
      description: 更新觸發器設定。
      operationId: updateAutomationTrigger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationTriggerUpdate'
            example:
              enabled: false
              config:
                schedule:
                  cron: '0 4 * * *'
                  cron_description: 調整為每日 04:00
      responses:
        '200':
          description: 觸發器更新成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationTrigger'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags: [Automation]
      summary: Soft delete automation trigger
      description: 將觸發器標記為刪除（soft delete）。
      operationId: deleteAutomationTrigger
      responses:
        '200':
          description: 刪除成功，回傳空物件。
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
