# Automation API Paths
paths:
  /automation/scripts:
    get:
      tags: [Automation]
      summary: List automation playbooks (scripts)
      description: Retrieve a paginated list of automation playbooks.
      operationId: listAutomationPlaybooks
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
      responses:
        "200":
          description: A paginated list of automation playbooks.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedAutomationPlaybooks"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      tags: [Automation]
      summary: Create automation playbook
      description: Create a new automation playbook.
      operationId: createAutomationPlaybook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutomationPlaybookCreate"
      responses:
        "201":
          description: Playbook created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationPlaybook"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /automation/scripts/{id}:
    parameters:
      - $ref: "#/components/parameters/IdParam"
    patch:
      tags: [Automation]
      summary: Update automation playbook
      description: Update an existing automation playbook.
      operationId: updateAutomationPlaybook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutomationPlaybookUpdate"
      responses:
        "200":
          description: Playbook updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationPlaybook"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags: [Automation]
      summary: Delete automation playbook
      description: Soft delete an automation playbook.
      operationId: deleteAutomationPlaybook
      responses:
        "204":
          description: Playbook deleted successfully.
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /automation/scripts/batch-actions:
    post:
      tags: [Automation]
      summary: Batch operations for playbooks
      description: Perform batch operations on multiple playbooks. Currently supports delete.
      operationId: batchPlaybookActions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [action, ids]
              properties:
                action:
                  type: string
                  enum: [delete]
                ids:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Batch operation result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /automation/scripts/{id}/execute:
    parameters:
      - $ref: "#/components/parameters/IdParam"
    post:
      tags: [Automation]
      summary: Execute automation playbook
      description: Immediately execute a playbook and return the resulting execution record.
      operationId: executeAutomationPlaybook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutomationExecutionRequest"
      responses:
        "200":
          description: Playbook execution has been initiated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationExecution"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /automation/executions:
    get:
      tags: [Automation]
      summary: List automation executions
      description: Retrieve a list of execution records, filterable by status or playbook ID.
      operationId: listAutomationExecutions
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, running, success, failed, cancelled]
        - name: playbook_id
          in: query
          schema:
            type: string
      responses:
        "200":
          description: A paginated list of execution records.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedAutomationExecutions"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /automation/executions/{id}/retry:
    parameters:
      - $ref: "#/components/parameters/IdParam"
    post:
      tags: [Automation]
      summary: Retry an automation execution
      description: Re-run a playbook based on a previous execution record.
      operationId: retryAutomationExecution
      responses:
        "200":
          description: A new execution record has been created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationExecution"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /automation/triggers:
    get:
      tags: [Automation]
      summary: List automation triggers
      description: Retrieve a paginated list of automation triggers.
      operationId: listAutomationTriggers
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: keyword
          in: query
          schema:
            type: string
      responses:
        "200":
          description: A paginated list of automation triggers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedAutomationTriggers"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      tags: [Automation]
      summary: Create automation trigger
      description: Create a new trigger and associate it with a playbook.
      operationId: createAutomationTrigger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutomationTriggerCreate"
      responses:
        "201":
          description: Trigger created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationTrigger"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /automation/triggers/{id}:
    parameters:
      - $ref: "#/components/parameters/IdParam"
    patch:
      tags: [Automation]
      summary: Update automation trigger
      description: Update an existing automation trigger.
      operationId: updateAutomationTrigger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutomationTriggerUpdate"
      responses:
        "200":
          description: Trigger updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationTrigger"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags: [Automation]
      summary: Delete automation trigger
      description: Soft delete an automation trigger.
      operationId: deleteAutomationTrigger
      responses:
        "204":
          description: Trigger deleted successfully.
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /automation/triggers/batch-actions:
    post:
      tags: [Automation]
      summary: Batch update automation triggers
      description: Batch enable, disable, or delete triggers.
      operationId: batchUpdateAutomationTriggers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [action, ids]
              properties:
                action:
                  type: string
                  enum: [enable, disable, delete]
                ids:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Batch operation result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  schemas:
    PaginatedAutomationPlaybooks:
      type: object
      required: [items, total]
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AutomationPlaybook'
        total:
          type: integer
        page:
          type: integer
        page_size:
          type: integer

    PaginatedAutomationExecutions:
      type: object
      required: [items, total]
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AutomationExecution'
        total:
          type: integer
        page:
          type: integer
        page_size:
          type: integer

    PaginatedAutomationTriggers:
      type: object
      required: [items, total]
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AutomationTrigger'
        total:
          type: integer
        page:
          type: integer
        page_size:
          type: integer