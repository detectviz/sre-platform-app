# IAM Schemas
components:
  schemas:
    # ===================
    # User
    # ===================
    User:
      type: object
      required:
        - id
        - name
        - email
        - role
        - team
        - status
        - created_at
        - updated_at
      properties:
        id:
          type: string
          readOnly: true
          example: usr-001
        name:
          type: string
          example: 張三
        email:
          type: string
          format: email
          example: zhang.san@example.com
        role:
          type: string
          enum: [admin, sre, developer, viewer]
          example: sre
        team:
          type: string
          description: The name of the team the user belongs to.
          example: SRE 平台團隊
        status:
          type: string
          enum: [active, invited, inactive]
          readOnly: true
          example: active
        avatar:
          type: string
          format: uri
          readOnly: true
          example: https://api.example.com/avatars/usr-001.png
        last_login_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          example: "2024-01-15T09:00:00Z"
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true

    UserCreate:
      type: object
      required: [name, email, role, team]
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin, sre, developer, viewer]
        team:
          type: string
          description: "Note: The mock server uses a team name string. In a real system, this would likely be a team_id."

    UserUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin, sre, developer, viewer]
        team:
          type: string
        status:
          type: string
          enum: [active, inactive]
          description: User status can be changed by an admin. 'invited' is a system-set status.

    # ===================
    # Team
    # ===================
    Team:
      type: object
      required: [id, name, owner_id, member_ids, created_at, updated_at]
      properties:
        id:
          type: string
          readOnly: true
          example: team-sre
        name:
          type: string
          example: SRE 平台團隊
        description:
          type: string
          example: 負責平台穩定性和可靠性
        owner_id:
          type: string
          example: usr-001
        member_ids:
          type: array
          items:
            type: string
          example: [usr-001, usr-002, usr-003]
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true

    TeamCreate:
      type: object
      required: [name]
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
        owner_id:
          type: string
        member_ids:
          type: array
          items:
            type: string

    TeamUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        owner_id:
          type: string
        member_ids:
          type: array
          items:
            type: string

    # ===================
    # Role
    # ===================
    Role:
      type: object
      required:
        - id
        - name
        - enabled
        - user_count
        - permissions
        - created_at
        - updated_at
      properties:
        id:
          type: string
          readOnly: true
          example: role-sre-engineer
        name:
          type: string
          example: SRE Engineer
        description:
          type: string
          example: 具備系統監控、事件處理和自動化執行權限
        enabled:
          type: boolean
          example: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/RolePermission'

    # ===================
    # Audit Log
    # ===================
    AuditLog:
      type: object
      description: "A record of an action taken within the system."
      readOnly: true
      required: [id, timestamp, user, action, target, result, ip]
      properties:
        id:
          type: string
        timestamp:
          type: string
          format: date-time
        user:
          type: object
          required: [id, name]
          properties:
            id:
              type: string
            name:
              type: string
        action:
          type: string
          enum: [create, read, update, delete, execute, login, logout, permission_change]
        target:
          type: object
          required: [type, name]
          properties:
            type:
              type: string
            name:
              type: string
        result:
          type: string
          enum: [success, failure]
        ip:
          type: string
          format: ipv4
        details:
          type: object
          additionalProperties: true
        user_count:
          type: integer
          readOnly: true
          example: 15
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true

    RolePermission:
      type: object
      required: [module, actions]
      properties:
        module:
          type: string
          description: The system module this permission applies to.
          example: "incidents"
        actions:
          type: array
          items:
            type: string
            enum: [read, create, update, delete, execute]
          example: ["read", "update"]

    RoleCreate:
      type: object
      required: [name, permissions]
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
        enabled:
          type: boolean
          default: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/RolePermission'
          minItems: 1

    RoleUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/RolePermission'
