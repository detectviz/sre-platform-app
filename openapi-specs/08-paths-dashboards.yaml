# Dashboard API Paths
paths:
  /dashboards:
    get:
      tags: [Dashboards]
      summary: List dashboards
      description: Retrieve a paginated list of dashboards with optional filtering and sorting
      operationId: listDashboards
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: type
          in: query
          description: Filter by dashboard type
          schema:
            type: string
            enum: [built-in, custom, grafana]
          example: grafana
        - name: category
          in: query
          description: Filter by category
          schema:
            type: string
          example: 基礎設施
        - name: keyword
          in: query
          description: Case-insensitive keyword for fuzzy name matching
          schema:
            type: string
      responses:
        '200':
          description: Successful response with paginated dashboards
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                  page_size:
                    type: integer
                    example: 20
                  total:
                    type: integer
                    example: 45
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dashboard'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      tags: [Dashboards]
      summary: Create dashboard
      description: Create a new dashboard
      operationId: createDashboard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardCreate'
            examples:
              grafanaDashboard:
                summary: Grafana Dashboard
                value:
                  name: "Production Metrics"
                  type: "grafana"
                  category: "基礎設施"
                  description: "生產環境關鍵指標監控"
                  team_id: "team-sre"
                  grafana_dashboard_uid: "prod-metrics-uid"
              customDashboard:
                summary: Custom Dashboard
                value:
                  name: "Custom Overview"
                  type: "custom"
                  category: "業務監控"
                  resource_ids: ["res-001", "res-002"]
      responses:
        '201':
          description: Dashboard created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /dashboards/{id}:
    parameters:
      - $ref: '#/components/parameters/IdParam'

    get:
      tags: [Dashboards]
      summary: Get dashboard by ID
      description: Retrieve a specific dashboard by its ID
      operationId: getDashboardById
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    patch:
      tags: [Dashboards]
      summary: Update dashboard
      description: Update an existing dashboard
      operationId: updateDashboard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardUpdate'
            example:
              name: "Updated Dashboard Name"
              description: "Updated description"
      responses:
        '200':
          description: Dashboard updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    delete:
      tags: [Dashboards]
      summary: Delete dashboard
      description: Soft delete a dashboard (sets deleted_at timestamp)
      operationId: deleteDashboard
      responses:
        '204':
          description: Dashboard deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /dashboards/available-grafana:
    get:
      tags: [Dashboards]
      summary: List available Grafana dashboards
      description: Retrieve Grafana dashboards that are not yet linked to the platform
      operationId: listAvailableGrafanaDashboards
      responses:
        '200':
          description: List of available Grafana dashboards
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required: [uid, title, url]
                  properties:
                    uid:
                      type: string
                      example: grafana-uid-1
                    title:
                      type: string
                      example: Service Health
                    url:
                      type: string
                      format: uri
                      example: https://grafana.example.com/d/grafana-uid-1
                    folder_title:
                      type: string
                      example: Production
                    folder_uid:
                      type: string
                      example: prod-folder
        '401':
          $ref: '#/components/responses/Unauthorized'

  /dashboards/templates:
    get:
      tags: [Dashboards]
      summary: List dashboard templates
      description: Retrieve reusable templates that can be applied when creating dashboards
      operationId: listDashboardTemplates
      responses:
        '200':
          description: Template catalog
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DashboardTemplate'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /dashboards/{id}/service-health:
    parameters:
      - $ref: '#/components/parameters/IdParam'

    get:
      tags: [Dashboards]
      summary: Get dashboard service health heatmap
      description: Retrieve the service health visualization data for supported dashboards (e.g. sre-war-room)
      operationId: getDashboardServiceHealth
      responses:
        '200':
          description: Heatmap data used to render the service health panel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceHealthData'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /dashboards/{id}/resource-group-status:
    parameters:
      - $ref: '#/components/parameters/IdParam'

    get:
      tags: [Dashboards]
      summary: Get dashboard resource group status summary
      description: Retrieve stacked bar data that summarises resource health per group for dashboards that expose it
      operationId: getDashboardResourceGroupStatus
      responses:
        '200':
          description: Resource group status series data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupStatusData'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /dashboards/{id}/options:
    parameters:
      - $ref: '#/components/parameters/IdParam'

    get:
      tags: [Dashboards]
      summary: Get dashboard-specific option sets
      description: Retrieve option metadata for dashboards that expose configuration menus (e.g. infrastructure insights)
      operationId: getDashboardOptions
      responses:
        '200':
          description: Dashboard option metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraInsightsOptions'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /dashboards/batch-actions:
    post:
      tags: [Dashboards]
      summary: Batch dashboard operations
      description: Perform batch operations on multiple dashboards
      operationId: batchDashboardActions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [action, ids]
              properties:
                action:
                  type: string
                  enum: [delete]
                  description: Action to perform
                ids:
                  type: array
                  items:
                    type: string
                  minItems: 1
                  description: List of dashboard IDs
            example:
              action: delete
              ids: ["dash-001", "dash-002", "dash-003"]
      responses:
        '200':
          description: Batch operation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResult'
              example:
                success: true
                updated: 3
                skipped_ids: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
