# Resources API Paths
paths:
  /resources:
    get:
      tags: [Resources]
      summary: List resources
      description: Retrieve a paginated list of resources.
      operationId: listResources
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: bookmarked
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A paginated list of resources.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Resource'
                  total:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags: [Resources]
      summary: Create resource
      operationId: createResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCreate'
      responses:
        '201':
          description: Resource created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /resources/{id}:
    parameters:
      - $ref: '#/components/parameters/IdParam'
    get:
      tags: [Resources]
      summary: Get resource by ID
      operationId: getResourceById
      responses:
        '200':
          description: A single resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags: [Resources]
      summary: Update resource
      operationId: updateResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceUpdate'
      responses:
        '200':
          description: Resource updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags: [Resources]
      summary: Delete resource
      operationId: deleteResource
      responses:
        '204':
          description: Resource deleted.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /resources/overview:
    get:
      tags: [Resources]
      summary: Get resource overview
      operationId: getResourceOverview
      responses:
        '200':
          description: Resource overview data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceOverviewData'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /resources/topology:
    get:
      tags: [Resources]
      summary: Get resource topology
      operationId: getResourceTopology
      responses:
        '200':
          description: Resource topology data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  nodes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Resource'
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceLink'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /resources/{id}/metrics:
    parameters:
      - $ref: '#/components/parameters/IdParam'
    get:
      tags: [Resources]
      summary: Get resource metrics
      operationId: getResourceMetrics
      responses:
        '200':
          description: Time series metrics for the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsData'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /resources/{id}/alert-rules:
    parameters:
      - $ref: '#/components/parameters/IdParam'
    get:
      tags: [Resources]
      summary: List alert rules for a resource
      operationId: listAlertRulesForResource
      responses:
        '200':
          description: A list of alert rules associated with the resource.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertRule'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /resources/batch-tags:
    post:
      tags: [Resources]
      summary: Batch tag resources
      operationId: batchTagResources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [resource_ids, tags]
              properties:
                resource_ids:
                  type: array
                  items:
                    type: string
                tags:
                  type: array
                  items:
                    $ref: '#/components/schemas/KeyValueTag'
      responses:
        '200':
          description: Batch tagging completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /resources/batch-actions:
    post:
      tags: [Resources]
      summary: Batch resource actions
      operationId: batchResourceActions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [action, ids]
              properties:
                action:
                  type: string
                  enum: [delete]
                ids:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Batch action completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    ResourceLink:
      type: object
      required: [id, source_resource_id, target_resource_id, link_type, created_at, updated_at]
      properties:
        id:
          type: string
          readOnly: true
        source_resource_id:
          type: string
        target_resource_id:
          type: string
        link_type:
          type: string
          enum: [depends_on, connects_to, includes, manages, monitors]
        metadata:
          type: object
          additionalProperties: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true

    TimeSeriesData:
      type: array
      items:
        type: array
        minItems: 2
        maxItems: 2
        items:
          - type: string
            format: date-time
          - type: number
      example:
        - ["2024-10-01T10:00:00Z", 45.2]
        - ["2024-10-01T10:01:00Z", 46.1]

    MetricsData:
      type: object
      required: [cpu, memory]
      properties:
        cpu:
          $ref: '#/components/schemas/TimeSeriesData'
        memory:
          $ref: '#/components/schemas/TimeSeriesData'

    KeyValueTag:
      type: object
      required: [key, value]
      properties:
        id:
          type: string
          readOnly: true
        key:
          type: string
        value:
          type: string

    ResourceOverviewData:
      type: object
      properties:
        distribution_by_type:
          type: array
          items:
            type: object
            properties:
              value:
                type: integer
              name:
                type: string
        distribution_by_provider:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
              count:
                type: integer
        recently_discovered:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              type:
                type: string
              discovered_at:
                type: string
                format: date-time
              job_id:
                type: string
        groups_with_most_alerts:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              criticals:
                type: integer
              warnings:
                type: integer