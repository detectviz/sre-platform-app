# Notifications API Paths
paths:
  # ===================
  # Notification Channels
  # ===================
  /notifications/channels:
    get:
      tags: [Notifications]
      summary: List notification channels
      description: Retrieve a paginated list of notification channels
      operationId: listNotificationChannels
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: type
          in: query
          description: Filter by channel type
          schema:
            type: string
            enum: [Email, Webhook (通用), Slack, LINE Notify, SMS]
          example: Email
        - name: enabled
          in: query
          description: Filter by enabled status
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: Successful response with paginated channels
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  page_size:
                    type: integer
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotificationChannel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      tags: [Notifications]
      summary: Create notification channel
      description: Create a new notification channel
      operationId: createNotificationChannel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationChannelCreate'
            examples:
              emailChannel:
                summary: Email channel
                value:
                  name: "Ops Team Email"
                  type: "Email"
                  enabled: true
                  config:
                    recipients: ["ops@example.com", "oncall@example.com"]
                    sender: "noreply@example.com"
              slackChannel:
                summary: Slack channel
                value:
                  name: "Slack Alerts"
                  type: "Slack"
                  enabled: true
                  config:
                    webhook_url: "https://hooks.slack.com/services/xxx/yyy/zzz"
                    channel: "#alerts"
      responses:
        '201':
          description: Channel created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notifications/channels/{id}:
    parameters:
      - $ref: '#/components/parameters/IdParam'

    get:
      tags: [Notifications]
      summary: Get channel by ID
      description: Retrieve a specific notification channel by its ID
      operationId: getNotificationChannelById
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    patch:
      tags: [Notifications]
      summary: Update channel
      description: Update an existing notification channel
      operationId: updateNotificationChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationChannelUpdate'
            examples:
              updateConfig:
                summary: Update channel configuration
                value:
                  config:
                    recipients: ["ops@example.com", "oncall@example.com", "manager@example.com"]
              disableChannel:
                summary: Disable channel
                value:
                  enabled: false
      responses:
        '200':
          description: Channel updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    delete:
      tags: [Notifications]
      summary: Delete channel
      description: Delete a notification channel
      operationId: deleteNotificationChannel
      responses:
        '204':
          description: Channel deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notifications/channels/{id}/test:
    parameters:
      - $ref: '#/components/parameters/IdParam'

    post:
      tags: [Notifications]
      summary: Test notification channel
      description: Send a test notification through the channel
      operationId: testNotificationChannel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Custom test message
                  default: "This is a test notification"
            example:
              message: "Testing notification channel configuration"
      responses:
        '200':
          description: Test notification sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  details:
                    type: object
                example:
                  success: true
                  message: "Test notification sent successfully"
                  details:
                    sent_at: "2024-01-15T10:30:00Z"
                    recipients: ["ops@example.com"]
        '400':
          description: Channel configuration error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # ===================
  # Notification Strategies
  # ===================
  /notifications/strategies:
    get:
      tags: [Notifications]
      summary: List notification strategies
      description: Retrieve a paginated list of notification strategies
      operationId: listNotificationStrategies
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: enabled
          in: query
          description: Filter by enabled status
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: Successful response with paginated strategies
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  page_size:
                    type: integer
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotificationStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      tags: [Notifications]
      summary: Create notification strategy
      description: Create a new notification strategy
      operationId: createNotificationStrategy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationStrategyCreate'
            example:
              name: "嚴重告警通知策略"
              enabled: true
              trigger_condition: "severity == 'Critical' OR impact == 'High'"
              severity_levels: ["Critical"]
              impact_levels: ["High", "Medium"]
              channel_ids: ["channel-email-ops", "channel-slack-oncall"]
      responses:
        '201':
          description: Strategy created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: One or more channels not found
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notifications/strategies/{id}:
    parameters:
      - $ref: '#/components/parameters/IdParam'

    get:
      tags: [Notifications]
      summary: Get strategy by ID
      description: Retrieve a specific notification strategy by its ID
      operationId: getNotificationStrategyById
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStrategy'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    patch:
      tags: [Notifications]
      summary: Update strategy
      description: Update an existing notification strategy
      operationId: updateNotificationStrategy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationStrategyUpdate'
            examples:
              updateCondition:
                summary: Update trigger condition
                value:
                  trigger_condition: "severity == 'Critical'"
                  severity_levels: ["Critical"]
              updateChannels:
                summary: Update notification channels
                value:
                  channel_ids: ["channel-email-ops", "channel-slack-oncall", "channel-sms"]
      responses:
        '200':
          description: Strategy updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    delete:
      tags: [Notifications]
      summary: Delete strategy
      description: Delete a notification strategy
      operationId: deleteNotificationStrategy
      responses:
        '204':
          description: Strategy deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # ===================
  # Notification History
  # ===================
  /notifications/history:
    get:
      tags: [Notifications]
      summary: List notification history
      description: Retrieve a paginated list of notification history records
      operationId: listNotificationHistory
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: channel_type
          in: query
          description: Filter by channel type
          schema:
            type: string
            enum: [Email, Webhook (通用), Slack, LINE Notify, SMS]
          example: Email
        - name: status
          in: query
          description: Filter by notification status
          schema:
            type: string
            enum: [sent, failed, pending]
          example: sent
        - name: incident_id
          in: query
          description: Filter by incident ID
          schema:
            type: string
          example: INC-001
        - name: start_date
          in: query
          description: Filter by start date (ISO 8601 format)
          schema:
            type: string
            format: date-time
          example: "2024-01-01T00:00:00Z"
        - name: end_date
          in: query
          description: Filter by end date (ISO 8601 format)
          schema:
            type: string
            format: date-time
          example: "2024-01-31T23:59:59Z"
      responses:
        '200':
          description: Successful response with paginated history
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  page_size:
                    type: integer
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotificationHistoryRecord'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notifications/history/{id}:
    parameters:
      - $ref: '#/components/parameters/IdParam'

    get:
      tags: [Notifications]
      summary: Get notification history by ID
      description: Retrieve a specific notification history record by its ID
      operationId: getNotificationHistoryById
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHistoryRecord'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # ===================
  # Batch Operations
  # ===================
  /notifications/channels/batch-enable:
    post:
      tags: [Notifications]
      summary: Batch enable channels
      description: Enable multiple notification channels at once
      operationId: batchEnableChannels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [channel_ids]
              properties:
                channel_ids:
                  type: array
                  items:
                    type: string
                  minItems: 1
            example:
              channel_ids: ["channel-001", "channel-002"]
      responses:
        '200':
          description: Batch enable completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notifications/channels/batch-disable:
    post:
      tags: [Notifications]
      summary: Batch disable channels
      description: Disable multiple notification channels at once
      operationId: batchDisableChannels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [channel_ids]
              properties:
                channel_ids:
                  type: array
                  items:
                    type: string
                  minItems: 1
            example:
              channel_ids: ["channel-003", "channel-004"]
      responses:
        '200':
          description: Batch disable completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notifications/strategies/batch-enable:
    post:
      tags: [Notifications]
      summary: Batch enable strategies
      description: Enable multiple notification strategies at once
      operationId: batchEnableStrategies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [strategy_ids]
              properties:
                strategy_ids:
                  type: array
                  items:
                    type: string
                  minItems: 1
            example:
              strategy_ids: ["strategy-001", "strategy-002"]
      responses:
        '200':
          description: Batch enable completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notifications/strategies/batch-disable:
    post:
      tags: [Notifications]
      summary: Batch disable strategies
      description: Disable multiple notification strategies at once
      operationId: batchDisableStrategies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [strategy_ids]
              properties:
                strategy_ids:
                  type: array
                  items:
                    type: string
                  minItems: 1
            example:
              strategy_ids: ["strategy-003", "strategy-004"]
      responses:
        '200':
          description: Batch disable completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
