# Incident API Paths
paths:
  /incidents:
    get:
      tags: [Incidents]
      summary: List incidents
      description: Retrieve a paginated list of incidents with optional filtering.
      operationId: listIncidents
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: resource_name
          in: query
          description: Filter by the display name of the impacted resource.
          schema:
            type: string
      responses:
        "200":
          description: Successful response with paginated incidents.
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  page_size:
                    type: integer
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Incident"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      tags: [Incidents]
      summary: Create incident
      description: Create a new incident.
      operationId: createIncident
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncidentCreate"
            example:
              resource_id: "res-001"
              rule_id: "rule-cpu-high"
              summary: "CPU usage exceeded 90%"
              severity: "critical"
              impact: "high"
              tags:
                env: production
                service: web
      responses:
        "201":
          description: Incident created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /incidents/{id}:
    parameters:
      - $ref: "#/components/parameters/IdParam"
    get:
      tags: [Incidents]
      summary: Get incident by ID
      description: Retrieve a specific incident by its ID.
      operationId: getIncidentById
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    patch:
      tags: [Incidents]
      summary: Update incident
      description: Update an existing incident with new values.
      operationId: updateIncident
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncidentUpdate"
            examples:
              updateStatus:
                summary: Update status
                value:
                  status: "resolved"
              assignIncident:
                summary: Assign to user
                value:
                  assignee: "張三"
                  status: "acknowledged"
      responses:
        "200":
          description: Incident updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags: [Incidents]
      summary: Delete incident
      description: Soft delete an incident by setting its `deleted_at` timestamp.
      operationId: deleteIncident
      responses:
        "204":
          description: Incident deleted successfully.
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /incidents/{id}/executions:
    parameters:
      - $ref: "#/components/parameters/IdParam"
    get:
      tags: [Incidents]
      summary: List automation executions for an incident
      description: Retrieve automation execution records linked to a specific incident.
      operationId: listIncidentExecutions
      responses:
        "200":
          description: Automation executions triggered for the incident.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AutomationExecution"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /incidents/{id}/actions:
    parameters:
      - $ref: "#/components/parameters/IdParam"
    post:
      tags: [Incidents]
      summary: Perform incident action
      description: Trigger a state-changing action such as acknowledge, resolve, assign, or silence an incident.
      operationId: performIncidentAction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [action]
              properties:
                action:
                  type: string
                  enum:
                    - acknowledge
                    - resolve
                    - assign
                    - silence
                    - add_note
                    - delete_note
                assignee_name:
                  type: string
                  description: Required when action is 'assign'.
                duration_hours:
                  type: integer
                  minimum: 1
                  description: Required when action is 'silence'.
                details:
                  type: string
                  description: Additional details for notes or deletions.
            examples:
              acknowledge:
                summary: Acknowledge an incident
                value:
                  action: acknowledge
              assign:
                summary: Assign to a named engineer
                value:
                  action: assign
                  assignee_name: 王小明
              silence:
                summary: Silence the incident for 2 hours
                value:
                  action: silence
                  duration_hours: 2
      responses:
        "200":
          description: Incident updated after performing the action.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /incidents/{id}/notify:
    parameters:
      - $ref: "#/components/parameters/IdParam"
    post:
      tags: [Incidents]
      summary: Trigger incident notifications
      description: Manually trigger the notification workflow for a specific incident.
      operationId: notifyIncident
      responses:
        "200":
          description: Notification dispatched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  notification_id:
                    type: string
        "404":
          $ref: "#/components/responses/NotFound"

  /incidents/batch-close:
    post:
      tags: [Incidents]
      summary: Batch close incidents
      description: Close multiple incidents at once with an optional resolution note.
      operationId: batchCloseIncidents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [incident_ids]
              properties:
                incident_ids:
                  type: array
                  items:
                    type: string
                  minItems: 1
                  description: List of incident IDs to close.
                resolution_note:
                  type: string
                  description: Optional resolution note.
            example:
              incident_ids: ["INC-001", "INC-002", "INC-003"]
              resolution_note: "問題已通過重啟服務解決"
      responses:
        "200":
          description: Batch close completed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchResult"
              example:
                success: true
                updated: 2
                skipped_ids: ["INC-003"]
                message: "Successfully closed 2 incidents, skipped 1 (already resolved)"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /incidents/batch-assign:
    post:
      tags: [Incidents]
      summary: Batch assign incidents
      description: Assign multiple incidents to a specific user.
      operationId: batchAssignIncidents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [incident_ids]
              properties:
                incident_ids:
                  type: array
                  items:
                    type: string
                  minItems: 1
                  description: List of incident IDs to assign.
                assignee_id:
                  type: string
                  description: User ID to assign incidents to.
                assignee_name:
                  type: string
                  description: User name to assign incidents to (alternative to assignee_id).
            examples:
              assignById:
                summary: Assign by user ID
                value:
                  incident_ids: ["INC-001", "INC-002"]
                  assignee_id: "usr-003"
              assignByName:
                summary: Assign by user name
                value:
                  incident_ids: ["INC-001", "INC-002"]
                  assignee_name: "張三"
      responses:
        "200":
          description: Batch assign completed.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BatchResult"
                  - type: object
                    properties:
                      assignee:
                        type: string
                      assignee_id:
                        type: string
              example:
                success: true
                updated: 2
                skipped_ids: []
                assignee: "張三"
                assignee_id: "usr-003"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"